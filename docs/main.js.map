{"version":3,"sources":["./src/environments/environment.ts","./src/app/recorded-diary/recorded-diary.component.ts","./src/app/recorded-diary/recorded-diary.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/entries/entries.component.html","./src/app/entries/entries.component.ts","./src/app/app-routing.module.ts","./src/app/time.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;ACR5D,MAAM,sBAAsB;IAEjC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4FALU,sBAAsB;sGAAtB,sBAAsB;QCPnC,qEAEU;;;;;;;;;;;;;;;;;;;;;ICMN,oEAA4F;;;;IAG7F,gFAA6G;IAA3D,mVAAgC;IAElF,4DAAa;;ACMT,MAAM,YAAY;IA2CvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QA1C7B,aAAQ,GAAW,EAAE,CAAC;QAC7B,cAAS,GAAY,EAAE,CAAC;QACxB,eAAU,GAAW,KAAK,CAAC;QAC3B,cAAS,GAAS,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,CAAC,CAAC;QACxC,aAAQ,GAAM,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,CAAC;IAwClC,CAAC;IAtCD,yBAAyB;IAClB,QAAQ,CAAC,KAAS;QACvB,IAAI,CAAC,QAAQ,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IAC1D,CAAC;IAED,kBAAkB;IAClB,KAAK;QACH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEnC,eAAe;QACf,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;QACpC,IAAI,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,UAAU,EAAE,CAAC;QACxC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,KAAK,EAAC,OAAO,EAAC,OAAO,EAAC,SAAS,EAAC,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,GAAG,EAAC,KAAK,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAE,CAAC,CAAC,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAE,CAAC,CAAC,CAAC,OAAO,EAAC;QAC/H,mBAAmB;QACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,gBAAgB;QAChB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;IACZ,cAAc;QACZ,IAAG,IAAI,CAAC,UAAU,EAAC;YACjB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;aAAI;YACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SAExB;IACH,CAAC;;wEAzCU,YAAY;4FAAZ,YAAY;QDnBzB,sEAAK;QACD,qEAAI;QAAA,kFAAuB;QAAA,4DAAK;QAEhC,4EAAgD;QAAzB,oIAAU,iBAAa,IAAC;QAAC,6EAAkB;QAAA,4DAAS;QAC5E,8EAAiF;QAAxB,qLAAuB;QAAC,4DAAW;QAC5F,yEAA6B;QAE5B,uEAAoD;QAA7B,+HAAW,oBAAgB,IAAC;QAAC,4DAAI;QACxD,wGAA4F;QAC5F,4EAA0B;QAAlB,oIAAS,WAAO,IAAC;QAAC,gEAAI;QAAA,4DAAS;QACxC,4DAAM;QACN,wHAEa;QACZ,iEAAI;QACJ,iEAAI;QACJ,6EAAqE;QACzE,4DAAM;;QAbsD,0DAAuB;QAAvB,iFAAuB;QAIzE,0DAAgB;QAAhB,gFAAgB;QAGS,0DAAgB;QAAhB,gFAAgB;QAKlC,0DAAqB;QAArB,gFAAqB;;;;;;;;;;;;;;AEftC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACG;AACR;AACqC;AAChB;AACoB;;;;;AAkB5E,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YAPJ;YACP,uEAAa;YACb,iEAAY;YACZ,0DAAW;YACX,oEAAgB;YAChB,4FAAuB;SACxB;mIAIU,SAAS,mBAdlB,2DAAY;QACZ,2EAAgB;QAChB,+FAAsB,aAGtB,uEAAa;QACb,iEAAY;QACZ,0DAAW;QACX,oEAAgB;QAChB,4FAAuB;kEATvB,2DAAY,4TACZ,2EAAgB;;;;;;;;;;;;;;;;;;;;;;;ICdpB,qEAAgC;IAC5B,uEAAwD;IAA1B,gTAAyB;IAAC,4DAAI;IAC5D,qEAAI;IACA,sEAAK;IACD,kEAAmC;IAEnC,uEAAM;IAAA,4DAAC;IAAA,4DAAO;IACd,0EAAmB;IAAA,uDAAoB;;IAAA,4DAAO;IAC9C,iEAAI;IAAA,iEAAI;IACZ,4DAAM;IAEN,wDACJ;IAAA,4DAAK;IACT,4DAAK;;;;IAN0B,0DAAoB;IAApB,kJAAoB;IAI3C,0DACJ;IADI,oFACJ;;ACEG,MAAM,gBAAgB;IAW3B,YAAmB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;QAPvC,cAAS,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QAC/B,WAAM,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;IAO/B,CAAC;IALD,WAAW;IAEX,CAAC;IAID,QAAQ;IAER,CAAC;;gFAfU,gBAAgB;gGAAhB,gBAAgB;QDd7B,2GAaK;;QAbiB,8EAAQ;;;;;;;;;;;;;;AEC9B;AAAA;AAAA;AAAA;AAAuD;;;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;ACDjB,MAAM,WAAW;IAYtB;QAVA,cAAS,GAAQ,EAAE,CAAC;IAUJ,CAAC;IARjB,OAAO,CAAC,OAAW;QACjB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;IAC9B,CAAC;IAED,OAAO;QACL,mDAAmD;QACnD,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;;sEAXU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAHV,MAAM;;;;;;;;;;;;;;;;;;;ACJ2B;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recorded-diary',\n  templateUrl: './recorded-diary.component.html',\n  styleUrls: ['./recorded-diary.component.scss']\n})\nexport class RecordedDiaryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section>\n    \n</section>\n","<div>\n    <h1>Lets Document your Life</h1>\n    <!--<i class=\"fas fa-arrow-right\"></i>-->\n    <button class='delete' (click) ='deleteEntry()'>Delete All Entries</button>\n   <textarea placeholder='How was your day....' type='text' [(ngModel)] ='textArea'></textarea>\n   <div class='asset-container'>\n     \n    <i class=\"far fa-grin\" (click) = 'showEmojiField()'></i>\n    <img *ngIf='emojiField' src='assets/30-300053_keyboard-comments-keyboard-icon-free-png.png'>\n    <button (click)='entry()'>Save</button> \n   </div>\n   <emoji-mart class=\"emoji-mart\" *ngIf=\"emojiField\" (emojiSelect)=\"addEmoji($event)\" title=\"Choose your emoji\">\n\n   </emoji-mart>  \n    <br>\n    <br>\n    <app-entries [entry] = 'entryList' [Time] = 'lastTime'></app-entries>     \n</div>       ","/*======================================================================================\n-----------------------------------TABLE OF CONTENT-------------------------------------\n\nADD EMOJI INTO TEXTAREA\nDIARY ENTRY DATA\nCURRENT TIME\nREMOVE EMOJI LIST\nCLEAR TEXTAREA\nEMOJI LIST\n========================================================================================*/\n\nimport { Component } from '@angular/core';\nimport { TimeService } from'./time.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public textArea: string = '';\n  entryList:string[] = [];\n  emojiField:boolean = false;\n  timeStore:any[] = [{hours:0,minutes:0}];\n  lastTime:{} = {hours:0,minutes:0};\n\n  //ADD EMOJI INTO TEXTAREA\n  public addEmoji(event:any){\n    this.textArea = `${this.textArea}${event.emoji.native}`;\n  }\n\n  //DIARY ENTRY DATA\n  entry(){\n    this.entryList.push(this.textArea);\n\n    //CURRENT TIME \n    let newHour = new Date().getHours();\n    let newMinute = new Date().getMinutes();\n    this.timeStore.push({hours:newHour,minutes:newMinute});\n    this.lastTime = {hours:this.timeStore[this.timeStore.length -1].hours,minutes:this.timeStore[this.timeStore.length -1].minutes}  \n    //REMOVE EMOJI LIST\n    this.emojiField = false;\n    \n    //CLEAR TEXTAREA\n    this.textArea = '';\n    console.log(this.lastTime);\n  }\n\n  deleteEntry(){\n    this.entryList = [];\n  }\n\n  //EMOJI LIST\n  showEmojiField(){\n    if(this.emojiField){\n      this.emojiField = false;\n    }else{\n      this.emojiField = true;\n      \n    }\n  }\n\n  constructor(private time:TimeService){\n    \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport{ PickerModule }from '@ctrl/ngx-emoji-mart';\nimport{ FormsModule}from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { EntriesComponent } from './entries/entries.component';\nimport { RecordedDiaryComponent } from './recorded-diary/recorded-diary.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EntriesComponent,\n    RecordedDiaryComponent\n  ],\n  imports: [\n    BrowserModule,\n    PickerModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<ul *ngFor='let Entry of entry'>\n    <i class=\"fas fa-times close\" (click) = 'deleteEntry()'></i>\n    <li>\n        <div>\n            <i class=\"fas fa-calendar-alt\"></i>\n            <!--<span class='time'>{{takeIt.hours}}:{{takeIt.minutes}}</span>-->\n            <span>|</span>\n            <span class='date'>{{todayDate | date}}</span>\n            <br><br>\n        </div>    \n        <!--dairy text-->\n        {{Entry}}\n    </li>\n</ul>\n\n","/*==================================================================================\n----------------------------------------TABLE OF CONTENT---------------------------\nTEXTAREA TEXT\n===================================================================================*/\n\nimport { getLocaleTimeFormat } from '@angular/common';\nimport { Component, OnInit,Input } from '@angular/core';\nimport{ AppComponent } from'../app.component';\n\n@Component({\n  selector: 'app-entries',\n  templateUrl: './entries.component.html',\n  styleUrls: ['./entries.component.scss']\n})\nexport class EntriesComponent implements OnInit {\n  //TEXTAREA TEXT\n  @Input() entry?:string[];\n  @Input()Time?:any;\n  todayDate: number = Date.now();\n  takeIt = this.appComp.lastTime;\n   \n  deleteEntry(){\n    \n  }\n\n  constructor(public appComp:AppComponent) {\n  }\n  ngOnInit(): void {\n    \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { getLocaleTimeFormat } from '@angular/common';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TimeService {\n  \n  TimeEntry:any[]= [];\n\n  addTime(timeNow:any){\n    this.TimeEntry.push(timeNow)\n  }\n  \n  getTime(){\n    //return this.TimeEntry[this.TimeEntry.length - 1];\n    return this.TimeEntry;\n  }\n  constructor() { }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}